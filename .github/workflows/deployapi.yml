name: Deploy RickAndMorty Api

on:
  push:
    branches:
      - docker

env:
  AZURE_WEBAPP_NAME: "rickandmorty"
  ConnectionStrings__AzureConnectionString: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .Net Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install dependencies
        run: dotnet restore ./RickAndMorty.Api/RickAndMorty.Api.csproj

      - name: Install dotnet-ef tool
        run: dotnet tool install --global dotnet-ef && export PATH="$PATH:/home/runner/.dotnet/tools"

      - name: Build
        run: dotnet build ./RickAndMorty.Api/RickAndMorty.Api.csproj --configuration Release --no-restore

      - name: Run Unit Tests
        run: dotnet test ./RickAndMorty.UnitTests/RickAndMorty.UnitTests.csproj --configuration Release

      - name: Run Integration Tests
        run: dotnet test ./RickAndMorty.IntegrationTests/RickAndMorty.IntegrationTests.csproj --configuration Release

      - name: "Checkout repository"
        uses: actions/checkout@v4
      - name: "Azure login"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER}}
          username: ${{ secrets.ACR_USERNAME}}
          password: ${{ secrets.ACR_PASSWORD }}

    # build and push docker image
      - name: "Build and push docker image"
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/rickandmortyapi:latest
          file: ./Dockerfile

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
         images: ${{ secrets.ACR_LOGIN_SERVER }}/rickandmortyapi:latest
         app-name: ${{env.AZURE_WEBAPP_NAME}}
         publish-profile: ${{secrets.RM_PUBLISH_SECRET}}        
