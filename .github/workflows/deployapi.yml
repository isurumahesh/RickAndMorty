name: Deploy RickAndMorty Api

on:
  push:
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: "rickandmortyapi"
  ConnectionStrings__AzureConnectionString: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .Net Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install dependencies
        run: dotnet restore ./RickAndMorty.Api/RickAndMorty.Api.csproj

      - name: Install dotnet-ef tool
        run: dotnet tool install --global dotnet-ef && export PATH="$PATH:/home/runner/.dotnet/tools"

      - name: Build
        run: dotnet build ./RickAndMorty.Api/RickAndMorty.Api.csproj --configuration Release --no-restore

      - name: Run Unit Tests
        run: dotnet test ./RickAndMorty.UnitTests/RickAndMorty.UnitTests.csproj --configuration Release

      - name: Run Integration Tests
        run: dotnet test ./RickAndMorty.IntegrationTests/RickAndMorty.IntegrationTests.csproj --configuration Release

      - name: Run EF Core Migrations
        run: dotnet ef database update --project ./RickAndMorty.Infrastructure/RickAndMorty.Infrastructure.csproj --startup-project ./RickAndMorty.Api/RickAndMorty.Api.csproj --context RickAndMortyDbContext

      - name: Publish
        run: dotnet publish ./RickAndMorty.Api/RickAndMorty.Api.csproj --configuration Release --output ./publish

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          package: ./publish
        env:
          AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
          AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.API_PUBLISH_SECRET }}
